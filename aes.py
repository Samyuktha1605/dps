# -*- coding: utf-8 -*-
"""aes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/124B0sUIxzSuQ04l1vh7Bq6osnL_XPwC2
"""

import socket
import threading
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
import os

#decryption
def decryption(C:bytes, key:bytes, iv:bytes ) -> str :
    cipher = Cipher(algorithms.AES(key), modes.CBC(iv))
    decryptor = cipher.decryptor()

    padded_plaintext = decryptor.update(C) + decryptor.finalize()

    unpadder = padding.PKCS7(algorithms.AES.block_size).unpadder()
    plaintext = unpadder.update(padded_plaintext) + unpadder.finalize()

    return plaintext.decode()
#encryption
def encryption(plaintext:str, key:bytes) -> (bytes, bytes):
    iv = os.urandom(16)
    cipher = Cipher(algorithms.AES(key), modes.CBC(iv))
    encryptor = cipher.encryptor()
    padder = padding.PKCS7(algorithms.AES.block_size).padder()
    padded_data = padder.update(plaintext.encode()) + padder.finalize()
    cipher_text = encryptor.update(padded_data) + encryptor.finalize()
    return cipher_text, iv

#server
def start_server():
    host = "127.0.0.1"
    port = 65432

    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((host, port))
    server_socket.listen(1)

    print("Server listening ", host, " port")
    conn, addr = server_socket.accept()

    print("Connected by ", addr)

    key = conn.recv(32)
    iv = conn.recv(16)
    cipher_text = conn.recv(1024)

    decrypted_text = decryption(cipher_text, key, iv)
    print("Decrypted text : ", decrypted_text)

    conn.close()

server_thread = threading.Thread(target=start_server)
server_thread.start()

#client
def start_client():
    host = "127.0.0.1"
    port = 65432

    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect((host, port))

    key = os.urandom(32) #AES-256/8
    plain_text = "This is a secret message"
    cipher_text, iv = encryption(plain_text, key)

    client_socket.sendall(key)
    client_socket.sendall(iv)
    client_socket.sendall(cipher_text)

    print("Encrypted Text sent : ", cipher_text)

    client_socket.close()

start_client()